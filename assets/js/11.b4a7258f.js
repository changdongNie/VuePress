(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{329:function(t,v,_){t.exports=_.p+"assets/img/4.135a9fbc.jpg"},346:function(t,v,_){"use strict";_.r(v);var i=_(3),e=Object(i.a)({},(function(){var t=this,v=t.$createElement,i=t._self._c||v;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h3",{attrs:{id:"分支操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[t._v("#")]),t._v(" 分支操作")]),t._v(" "),i("ol",[i("li",[t._v("打开文件如："),i("code",[t._v("D:\\learngit")])]),t._v(" "),i("li",[i("code",[t._v("git init")]),t._v(" 初始化")]),t._v(" "),i("li",[i("code",[t._v("git checkout - b <dev>")]),t._v("  创建进入 dev分支")]),t._v(" "),i("li",[i("code",[t._v("git branch")]),t._v("  查看分支，当前分支会有一个 "),i("code",[t._v("*")]),t._v("表示")]),t._v(" "),i("li",[t._v("添加  "),i("code",[t._v("< Readme.md >")]),t._v("  文件")]),t._v(" "),i("li",[i("code",[t._v("git add Readme.md")])]),t._v(" "),i("li",[i("code",[t._v('git commit -m "<dev branch>"')]),t._v(" 提交")]),t._v(" "),i("li",[i("code",[t._v("git checkout master")]),t._v("  切换到主分支")]),t._v(" "),i("li",[t._v("文件 "),i("code",[t._v("Readme.md")]),t._v(" 没有了")]),t._v(" "),i("li",[i("code",[t._v("git checkout master")]),t._v(" 切换到主分支")]),t._v(" "),i("li",[i("code",[t._v("git merge <dev>")]),t._v(" 合并分支")]),t._v(" "),i("li",[i("code",[t._v("git branch -d <dev>")]),t._v(" 删除分支")])]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),i("p",[i("code",[t._v("git branch")]),t._v(" 查看分支命令，   "),i("code",[t._v("git branch <name>")]),t._v("  创建分支,"),i("code",[t._v("git checkout <name>")]),t._v(" 切换分支，"),i("code",[t._v("git checkout -b <name>")]),t._v(" 创建+切换分支命令 ，"),i("code",[t._v("git merge <name>")]),t._v(" 合并分支 "),i("code",[t._v("git branch -d <name>")]),t._v(" 删除分支，删除没有合并的分支通过 "),i("code",[t._v("git branch -D <name>")]),t._v(" 强行删除。")])]),t._v(" "),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),i("p",[i("code",[t._v("git branch <name>")]),t._v(" 创建分支时根据当前分支创建。"),i("code",[t._v("git branch -d <name>")]),t._v(" 删除分支不能在当前分支删除需要切换到其他分支。合并分支时出现冲突文件，通过 "),i("code",[t._v("git status")]),t._v(" 查看冲突文件，处理冲突文件，在提交管理， "),i("code",[t._v("git log --graph --pretty=oneline --abbrev-commit")]),t._v(" 查看分支情况。")])]),t._v(" "),i("h2",{attrs:{id:"连接远程库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#连接远程库"}},[t._v("#")]),t._v(" 连接远程库")]),t._v(" "),i("ol",[i("li",[i("code",[t._v('ssh-keygen -t rsa -C "<youremail@example.com>"')]),t._v("  创建SSH Key  然后一直回车")]),t._v(" "),i("li",[t._v("根据提示的目录一般在用户主目录下找到 "),i("code",[t._v(".ssh")]),t._v(" 目录，里面有 "),i("code",[t._v("id_rsa")]),t._v(" 和 "),i("code",[t._v("id_rsa.pub")]),t._v("两个文件。")]),t._v(" "),i("li",[t._v("复制 "),i("code",[t._v("id_rsa_pub")]),t._v(" 文件内的公钥")]),t._v(" "),i("li",[t._v("登录GitHub，打开 “settings”，“SSH and GpG keys” 页面：")]),t._v(" "),i("li",[t._v("点击“Add SSH Key ”，填写Title,粘贴 "),i("code",[t._v("id_rsa.pub")]),t._v(" 文件内容")]),t._v(" "),i("li",[t._v("在GitHub 创建一个仓库 "),i("code",[t._v("<learngit>")])]),t._v(" "),i("li",[t._v("在本地 learngit 库下运行命令 "),i("code",[t._v("git remote add origin git@github.com:<你的用户名>/learngit.git")])]),t._v(" "),i("li",[i("code",[t._v("git push -u origin master")]),t._v(" 将本地库所有内容推送到远程库")])]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),i("p",[i("code",[t._v("git remote add origin git@github.com:<你的用户名>/<库名>.git")]),t._v(" 本地库远程提交远程库")]),t._v(" "),i("p",[i("code",[t._v("git clone git@github.com:<账户名>/<远程库名>.git")]),t._v(" 从远程库clone 到本地")]),t._v(" "),i("p",[i("code",[t._v("git push -u origin master")]),t._v(" 首次提交到远程库")])]),t._v(" "),i("h2",{attrs:{id:"远程库提交"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#远程库提交"}},[t._v("#")]),t._v(" 远程库提交")]),t._v(" "),i("p",[i("code",[t._v("git remote add origin git@github.com:<你的用户名>/<仓库名>.git")]),t._v("  关联")]),t._v(" "),i("p",[t._v("首次提交\n"),i("code",[t._v("git pull origin master --allow-unrelated-histories")]),t._v("\n下次\n"),i("code",[t._v("git pull origin master")]),t._v("\n解除 远程库关联\n"),i("code",[t._v("git remote remove origin")])]),t._v(" "),i("p",[t._v("克隆下载库\n"),i("code",[t._v("git clone git@github.com:<你的用户名>/<仓库名>.git")]),t._v("\n克隆下来的只有master分支的内容，如果添加dev分支\n"),i("code",[t._v("git checkout -b dev origin/dev")])]),t._v(" "),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),i("p",[t._v("提交到远程库 "),i("code",[t._v("origin")]),t._v(" 中内容，是版本库master分区中的HEAD的部分")])]),t._v(" "),i("h2",{attrs:{id:"bug-修复"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#bug-修复"}},[t._v("#")]),t._v(" bug 修复")]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("stash说明")]),t._v(" "),i("p",[t._v("临时保存分支 ,工作分支写到一半需要切换到其他分支修改bug，临时保存\n新文件必须 add 才能储存")])]),t._v(" "),i("p",[i("code",[t._v("git add")]),t._v(" 新文件\n"),i("code",[t._v("git stash")]),t._v("  创建临时储存\n切换其他分支，修复bug")]),t._v(" "),i("p",[t._v("返回工作分支，恢复")]),t._v(" "),i("p",[i("code",[t._v("git stash list")]),t._v(" //查找临时分支\n"),i("code",[t._v("git stash apply")]),t._v(" //恢复不删除\n"),i("code",[t._v("git stash drop")]),t._v(" //删除分支\n"),i("code",[t._v("git stash pop")]),t._v(" //恢复并删除分支")]),t._v(" "),i("h3",{attrs:{id:"解决冲突问题"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突问题"}},[t._v("#")]),t._v(" 解决冲突问题")]),t._v(" "),i("ol",[i("li",[i("code",[t._v("git pull origin master")]),t._v(" 远程同步文件")]),t._v(" "),i("li",[t._v("解决本地文件冲突")]),t._v(" "),i("li",[i("code",[t._v("git push origin master")]),t._v(" 提交文件")])]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",[t._v("pull 操作相当于同步代码")]),t._v(" "),i("p",[t._v("git fetch origin master\ngit log -p master..origin/master\ngit merge origin/master")])]),t._v(" "),i("h3",{attrs:{id:"忽略文件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[t._v("#")]),t._v(" 忽略文件")]),t._v(" "),i("ul",[i("li",[t._v("忽略某些文件时，需要编写"),i("code",[t._v(".gitignore")]),t._v(" 文件；")]),t._v(" "),i("li",[t._v("在"),i("code",[t._v(".gitignore")]),t._v("写入忽略的文件 如 "),i("code",[t._v("*.class")]),t._v("文件、"),i("code",[t._v("dist")]),t._v(" 文件夹")]),t._v(" "),i("li",[i("code",[t._v(".gitignore")]),t._v("文件本身要放到版本库，可以对"),i("code",[t._v(".gitignore")]),t._v("做版本管理！")])]),t._v(" "),i("h2",{attrs:{id:"分支策略"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分支策略"}},[t._v("#")]),t._v(" 分支策略")]),t._v(" "),i("p",[i("img",{attrs:{src:_(329),alt:"2"}})]),t._v(" "),i("div",{staticStyle:{float:"left width:100%"}},[i("div",{staticStyle:{float:"left"}},[i("a",{attrs:{href:"021301.html"}},[t._v("←git基础操作")])]),t._v(" "),i("div",{staticStyle:{float:"right"}},[i("a",{attrs:{href:"index.html"}},[t._v("目录→")])])])])}),[],!1,null,null,null);v.default=e.exports}}]);